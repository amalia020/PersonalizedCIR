import json
import openai
import time
import re



def main():
    args = get_args()

    # OpenAI API key
    openai.api_key = ""
    model_engine = "gpt-3.5-turbo-16k"
    set_176 = {'14-1-8', '10-1-9', '10-1-20', '17-3-4', '12-1-2', '17-1-10', '10-2-10', '15-2-4', '16-1-3', '16-1-14', '10-2-3', '18-2-8', '20-2-2', '14-2-5', '16-1-6', '20-2-9', '15-1-15', '15-2-2', '14-1-7', '11-2-3', '19-1-5', '10-3-7', '9-2-5', '12-1-5', '20-1-4', '17-3-3', '13-1-5', '9-1-5', '17-1-5', '11-2-7', '20-1-8', '20-1-9', '10-1-7', '14-2-6', '9-2-11', '17-2-2', '20-1-12', '16-1-9', '17-3-6', '10-3-9', '16-1-13', '15-2-10', '20-2-5', '12-1-4', '10-1-11', '18-1-12', '18-1-8', '9-2-2', '9-2-3', '18-1-5', '12-2-11', '15-1-12', '12-2-2', '14-1-17', '16-1-12', '19-1-15', '15-1-13', '17-2-12', '14-2-4', '14-2-11', '15-2-6', '19-1-7', '14-1-11', '11-1-7', '20-2-14', '13-1-3', '17-2-4', '9-2-9', '14-1-9', '15-1-6', '14-2-8', '20-1-11', '18-1-14', '17-1-7', '18-1-9', '10-1-17', '20-1-7', '11-2-2', '18-2-3', '12-1-6', '17-1-11', '14-1-12', '11-1-6', '17-2-5', '17-2-13', '18-2-6', '19-1-12', '9-1-6', '9-2-4', '16-1-7', '14-1-18', '12-1-9', '14-1-3', '15-1-14', '11-2-8', '15-2-1', '11-1-3', '14-1-4', '12-1-10', '14-1-14', '14-2-9', '11-1-9', '10-2-6', '13-1-6', '18-1-11', '19-1-3', '11-1-4', '9-1-3', '15-1-3', '20-2-4', '20-2-7', '17-2-11', '17-2-7', '10-1-2', '14-1-19', '13-1-1', '11-1-5', '15-2-11', '14-2-3', '18-1-10', '21-1-3', '20-2-6', '16-1-10', '19-1-11', '17-1-9', '10-1-15', '14-2-10', '16-1-8', '14-1-15', '16-1-4', '9-1-4', '12-2-8', '10-3-5', '11-1-8', '19-1-2', '21-1-1', '10-2-5', '12-2-3', '16-1-5', '14-2-7', '12-2-6', '10-2-7', '14-1-5', '10-3-6', '10-1-12', '19-1-14', '10-1-3', '12-2-10', '12-2-5', '11-2-11', '14-1-13', '18-1-6', '18-1-15', '15-1-2', '17-2-15', '20-1-6', '21-1-2', '12-2-9', '17-1-4', '14-2-12', '17-2-9', '20-2-3', '19-1-17', '14-2-2', '19-1-6', '18-2-12', '20-2-11', '10-1-6', '18-2-7', '9-2-7', '10-1-14', '15-2-9', '18-1-3', '10-2-13', '20-1-5', '15-1-5'}

    with open(args.input_path) as f:
        for line_num,line in enumerate(f):
            if line_num < 0:
                continue
            
            data = json.loads(line)
            sample_id = data.get('sample_id','')
            if sample_id not in set_176:
                continue


            ptkb = data.get('ptkb', '')
            cur_utt = data.get('cur_utt_text','')
            cur_resp = data.get('cur_response_text','')
            conv = data.get('ctx_utts_text','')
            response_list = data.get('response', '')
            provenance = data.get('ptkb_provenance','')
            r_utterance = data.get('oracle_utt_text','')
            history_response = data.get('history_response','')
            turn = data.get('number', '')
            last_response = data.get('last_response','')


            human_ptkb = {'9-1-3': [5], '9-1-4': [], '9-1-5': [], '9-1-6': [], '9-2-2': [], '9-2-3': [4, 5, 10], '9-2-4': [11], '9-2-5': [6, 11], '9-2-7': [], '9-2-9': [], '9-2-11': [], '10-1-2': [], '10-1-3': [], '10-1-6': [], '10-1-7': [2], '10-1-9': [9], '10-1-11': [10, 9], '10-1-12': [2], '10-1-14': [1], '10-1-15': [], '10-1-17': [], '10-1-20': [], '10-2-3': [], '10-2-5': [], '10-2-6': [], '10-2-7': [], '10-2-10': [], '10-2-13': [], '10-3-5': [3], '10-3-6': [13, 14, 7], '10-3-7': [], '10-3-9': [], '11-1-3': [], '11-1-4': [8], '11-1-5': [], '11-1-6': [], '11-1-7': [], '11-1-8': [5], '11-1-9': [], '11-2-2': [], '11-2-3': [3, 1], '11-2-7': [], '11-2-8': [1], '11-2-11': [], '12-1-2': [6], '12-1-4': [6], '12-1-5': [], '12-1-6': [1], '12-1-9': [], '12-1-10': [], '12-2-2': [5], '12-2-3': [], '12-2-5': [], '12-2-6': [], '12-2-8': [], '12-2-9': [6], '12-2-10': [], '12-2-11': [10], '13-1-1': [9, 1, 3], '13-1-3': [1], '13-1-5': [9], '13-1-6': [9], '14-1-3': [], '14-1-4': [], '14-1-5': [], '14-1-7': [], '14-1-8': [6, 3], '14-1-9': [3], '14-1-11': [], '14-1-12': [], '14-1-13': [], '14-1-14': [], '14-1-15': [], '14-1-17': [], '14-1-18': [], '14-1-19': [], '14-2-2': [2, 9], '14-2-3': [5, 3], '14-2-4': [11], '14-2-5': [], '14-2-6': [10, 5, 3], '14-2-7': [], '14-2-8': [], '14-2-9': [], '14-2-10': [], '14-2-11': [], '14-2-12': [], '15-1-2': [], '15-1-3': [], '15-1-5': [], '15-1-6': [], '15-1-12': [2, 7], '15-1-13': [], '15-1-14': [], '15-1-15': [], '15-2-1': [8, 7, 5, 2, 4], '15-2-2': [8, 7, 5], '15-2-4': [8, 7, 5], '15-2-6': [], '15-2-9': [], '15-2-10': [], '15-2-11': [], '16-1-3': [], '16-1-4': [], '16-1-5': [], '16-1-6': [], '16-1-7': [], '16-1-8': [], '16-1-9': [2], '16-1-10': [2, 1], '16-1-12': [], '16-1-13': [2, 6], '16-1-14': [], '17-1-4': [9, 8], '17-1-5': [], '17-1-7': [2], '17-1-9': [9, 8], '17-1-10': [], '17-1-11': [9, 8, 2], '17-2-2': [8, 6, 4], '17-2-4': [6], '17-2-5': [6], '17-2-7': [4, 7], '17-2-9': [], '17-2-11': [8], '17-2-12': [8], '17-2-13': [8], '17-2-15': [8], '17-3-3': [5, 10], '17-3-4': [], '17-3-6': [], '18-1-3': [], '18-1-5': [], '18-1-6': [], '18-1-8': [], '18-1-9': [], '18-1-10': [8], '18-1-11': [], '18-1-12': [], '18-1-14': [], '18-1-15': [], '18-2-3': [1], '18-2-6': [], '18-2-7': [7], '18-2-8': [], '18-2-12': [7], '19-1-2': [6], '19-1-3': [], '19-1-5': [6], '19-1-6': [1], '19-1-7': [7], '19-1-11': [], '19-1-12': [], '19-1-14': [], '19-1-15': [], '19-1-17': [], '20-1-4': [], '20-1-5': [], '20-1-6': [], '20-1-7': [], '20-1-8': [], '20-1-9': [11], '20-1-11': [], '20-1-12': [], '20-2-2': [], '20-2-3': [], '20-2-4': [], '20-2-5': [], '20-2-6': [], '20-2-7': [11], '20-2-9': [], '20-2-11': [], '20-2-14': [], '21-1-1': [], '21-1-2': [8], '21-1-3': [10, 8, 4]}
            machine_ptkb = {'9-1-3': [1, 2, 3, 4, 5, 6, 8, 9], '9-1-4': [1, 2, 4, 5, 6, 7, 8, 9, 10], '9-1-5': [3, 8], '9-1-6': [1, 3, 9, 10], '9-2-2': [1, 2, 3, 5, 6, 7, 8, 9, 10, 11], '9-2-3': [2, 5, 6, 7, 9, 11], '9-2-4': [3, 5, 6, 11], '9-2-5': [], '9-2-7': [4, 5, 10], '9-2-9': [1, 3, 4, 5, 6, 7, 8, 10, 11], '9-2-11': [1, 2, 3, 6, 9, 10], '10-1-2': [2, 4, 5, 6, 10, 11, 12], '10-1-3': [], '10-1-6': [], '10-1-7': [], '10-1-9': [], '10-1-11': [8], '10-1-12': [], '10-1-14': [], '10-1-15': [2, 6, 7, 11], '10-1-17': [2, 8, 9], '10-1-20': [1, 5, 8], '10-2-3': [1, 2, 4, 5, 6, 7, 8, 9, 10], '10-2-5': [1, 2, 3, 5, 6, 7, 8, 9, 10], '10-2-6': [1, 2, 5, 6, 9], '10-2-7': [], '10-2-10': [], '10-2-13': [1, 2, 8, 10], '10-3-5': [], '10-3-6': [1, 3, 4, 6, 7, 9, 11, 12, 14, 16, 17], '10-3-7': [], '10-3-9': [11], '11-1-3': [1, 3, 5, 7], '11-1-4': [1, 2, 3, 4, 7, 8, 11, 13, 14, 15], '11-1-5': [], '11-1-6': [], '11-1-7': [], '11-1-8': [], '11-1-9': [2, 3, 4, 5, 6, 11, 12], '11-2-2': [], '11-2-3': [2, 6, 8, 10], '11-2-7': [3, 5, 6], '11-2-8': [5], '11-2-11': [], '12-1-2': [], '12-1-4': [6], '12-1-5': [], '12-1-6': [1, 6], '12-1-9': [3], '12-1-10': [1, 2, 3, 4, 5], '12-2-2': [], '12-2-3': [], '12-2-5': [7], '12-2-6': [1, 2, 5, 6, 7, 8, 10], '12-2-8': [], '12-2-9': [], '12-2-10': [1, 3, 4, 7, 8, 9], '12-2-11': [3, 5, 6, 10], '13-1-1': [4, 6], '13-1-3': [1, 2], '13-1-5': [], '13-1-6': [], '14-1-3': [3, 6, 7, 8, 9], '14-1-4': [2, 7], '14-1-5': [], '14-1-7': [1, 2, 3, 4, 5, 7, 8, 9], '14-1-8': [], '14-1-9': [2, 3, 4, 5, 9, 10], '14-1-11': [1, 2, 3, 5, 6, 8, 9], '14-1-12': [], '14-1-13': [], '14-1-14': [], '14-1-15': [8], '14-1-17': [1, 2, 8, 10], '14-1-18': [], '14-1-19': [2, 4, 5, 7, 8, 10], '14-2-2': [3], '14-2-3': [], '14-2-4': [1], '14-2-5': [1], '14-2-6': [2, 4, 6], '14-2-7': [6], '14-2-8': [2, 4, 7, 8, 9], '14-2-9': [5], '14-2-10': [], '14-2-11': [1, 3, 5, 6], '14-2-12': [1, 3, 5, 6, 11], '15-1-2': [1], '15-1-3': [1, 3, 4, 5, 6, 7], '15-1-5': [3], '15-1-6': [2, 7], '15-1-12': [], '15-1-13': [], '15-1-14': [], '15-1-15': [], '15-2-1': [], '15-2-2': [], '15-2-4': [1, 2, 3, 5, 7, 8], '15-2-6': [1, 3, 4, 5, 6, 7, 8], '15-2-9': [6], '15-2-10': [4, 7], '15-2-11': [1], '16-1-3': [4, 9], '16-1-4': [7], '16-1-5': [], '16-1-6': [10], '16-1-7': [], '16-1-8': [2, 3, 4, 5, 7, 8, 9, 11], '16-1-9': [], '16-1-10': [], '16-1-12': [4, 7, 8, 11], '16-1-13': [], '16-1-14': [], '17-1-4': [], '17-1-5': [6], '17-1-7': [1, 3, 5, 6, 8, 9], '17-1-9': [1, 2, 3, 5, 8, 9], '17-1-10': [1, 2, 3, 4, 6, 8, 9], '17-1-11': [], '17-2-2': [1, 5, 7], '17-2-4': [3, 5, 8, 9], '17-2-5': [2, 3, 4, 5, 7, 8, 9], '17-2-7': [2, 7], '17-2-9': [1], '17-2-11': [1, 8, 9], '17-2-12': [5], '17-2-13': [9], '17-2-15': [1], '17-3-3': [5], '17-3-4': [], '17-3-6': [1, 2, 3, 6, 7, 8, 10, 12], '18-1-3': [1, 9], '18-1-5': [2, 3, 4, 5, 6, 7, 9, 10], '18-1-6': [3, 9, 10], '18-1-8': [], '18-1-9': [3, 5, 10], '18-1-10': [1, 4, 5, 6, 8, 10], '18-1-11': [3, 4, 7, 9, 10], '18-1-12': [6, 8], '18-1-14': [6], '18-1-15': [7, 10], '18-2-3': [1, 10], '18-2-6': [3, 6], '18-2-7': [1, 2, 3, 4, 5, 6, 7, 9, 10], '18-2-8': [4, 5, 9], '18-2-12': [3, 4, 6, 8, 9], '19-1-2': [], '19-1-3': [], '19-1-5': [], '19-1-6': [], '19-1-7': [], '19-1-11': [], '19-1-12': [], '19-1-14': [4], '19-1-15': [], '19-1-17': [], '20-1-4': [], '20-1-5': [1, 2, 4, 9], '20-1-6': [], '20-1-7': [11], '20-1-8': [], '20-1-9': [], '20-1-11': [3, 7, 8, 9, 10, 11], '20-1-12': [5, 11], '20-2-2': [], '20-2-3': [3, 4, 5, 6, 8, 10], '20-2-4': [], '20-2-5': [], '20-2-6': [], '20-2-7': [], '20-2-9': [3, 5, 6, 7, 8, 10, 11, 12], '20-2-11': [], '20-2-14': [1, 2, 3, 7, 9, 10, 11], '21-1-1': [], '21-1-2': [10, 11], '21-1-3': [4, 7, 8, 9, 10, 11]}
            LLM_choose_dic = {'9-1-3': ['2', '4', '5', '6', '7'], '9-1-4': [], '9-1-5': ['5'], '9-1-6': [], '9-2-2': ['4', '5', '10'], '9-2-3': ['4', '5'], '9-2-4': ['4', '5', '6', '10'], '9-2-5': ['5', '6', '11'], '9-2-7': ['5', '10'], '9-2-9': [], '9-2-11': ['6'], '10-1-2': ['8', '10'], '10-1-3': ['1', '8', '9', '10'], '10-1-6': [], '10-1-7': ['2', '8', '9', '10'], '10-1-9': ['8', '9', '10'], '10-1-11': ['10'], '10-1-12': ['2', '9', '10'], '10-1-14': ['1'], '10-1-15': ['1', '8', '9', '10'], '10-1-17': ['8', '9', '10'], '10-1-20': ['8', '9', '10'], '10-2-3': ['2', '8', '10'], '10-2-5': ['2', '8', '10'], '10-2-6': ['2', '8', '10'], '10-2-7': ['2', '8'], '10-2-10': ['2'], '10-2-13': ['4', '8'], '10-3-5': [], '10-3-6': ['3', '5', '14', '15', '16', '17'], '10-3-7': ['16'], '10-3-9': [], '11-1-3': [], '11-1-4': ['5', '6', '8'], '11-1-5': [], '11-1-6': ['3', '8'], '11-1-7': ['13'], '11-1-8': ['5', '6'], '11-1-9': [], '11-2-2': [], '11-2-3': ['1', '3'], '11-2-7': ['1', '9'], '11-2-8': ['1'], '11-2-11': [], '12-1-2': ['1', '6'], '12-1-4': ['6'], '12-1-5': ['6'], '12-1-6': ['1', '5'], '12-1-9': [], '12-1-10': [], '12-2-2': [], '12-2-3': ['8', '9'], '12-2-5': ['9'], '12-2-6': ['9'], '12-2-8': ['9'], '12-2-9': ['1', '7'], '12-2-10': ['1', '7'], '12-2-11': ['10'], '13-1-1': ['3', '9'], '13-1-3': [], '13-1-5': ['9'], '13-1-6': ['9'], '14-1-3': [], '14-1-4': [], '14-1-5': [], '14-1-7': [], '14-1-8': [], '14-1-9': ['3'], '14-1-11': ['2'], '14-1-12': [], '14-1-13': [], '14-1-14': [], '14-1-15': [], '14-1-17': [], '14-1-18': [], '14-1-19': [], '14-2-2': ['7', '3', '5'], '14-2-3': ['3', '5'], '14-2-4': ['11'], '14-2-5': ['11'], '14-2-6': ['10'], '14-2-7': [], '14-2-8': [], '14-2-9': [], '14-2-10': ['5'], '14-2-11': [], '14-2-12': [], '15-1-2': [], '15-1-3': [], '15-1-5': [], '15-1-6': [], '15-1-12': ['2', '6', '7'], '15-1-13': [], '15-1-14': ['2', '6', '7'], '15-1-15': ['2'], '15-2-1': ['1', '2', '4'], '15-2-2': ['2'], '15-2-4': ['7', '8'], '15-2-6': [], '15-2-9': [], '15-2-10': [], '15-2-11': [], '16-1-3': [], '16-1-4': [], '16-1-5': [], '16-1-6': [], '16-1-7': [], '16-1-8': [], '16-1-9': ['2'], '16-1-10': ['1'], '16-1-12': ['2'], '16-1-13': ['3'], '16-1-14': ['2'], '17-1-4': ['8'], '17-1-5': ['8', '9'], '17-1-7': ['1'], '17-1-9': [], '17-1-10': [], '17-1-11': ['1', '2', '8'], '17-2-2': ['8'], '17-2-4': ['8'], '17-2-5': [], '17-2-7': ['8'], '17-2-9': [], '17-2-11': ['8'], '17-2-12': ['8'], '17-2-13': ['8'], '17-2-15': ['8'], '17-3-3': ['2', '5', '10'], '17-3-4': ['9'], '17-3-6': ['9'], '18-1-3': [], '18-1-5': ['5'], '18-1-6': ['2'], '18-1-8': ['5'], '18-1-9': [], '18-1-10': ['8'], '18-1-11': [], '18-1-12': ['5'], '18-1-14': [], '18-1-15': [], '18-2-3': ['1', '4'], '18-2-6': ['1'], '18-2-7': ['1', '4'], '18-2-8': ['4'], '18-2-12': ['1', '7'], '19-1-2': ['6'], '19-1-3': [], '19-1-5': ['2', '7'], '19-1-6': [], '19-1-7': ['7'], '19-1-11': [], '19-1-12': [], '19-1-14': ['6'], '19-1-15': [], '19-1-17': [], '20-1-4': [], '20-1-5': ['11'], '20-1-6': ['11'], '20-1-7': [], '20-1-8': [], '20-1-9': ['11'], '20-1-11': [], '20-1-12': [], '20-2-2': ['4', '8', '5'], '20-2-3': ['4'], '20-2-4': ['8', '9'], '20-2-5': ['4', '8', '9'], '20-2-6': ['5'], '20-2-7': ['10'], '20-2-9': [], '20-2-11': [], '20-2-14': [], '21-1-1': ['10', '8'], '21-1-2': ['8'], '21-1-3': ['8']}
            LLM_choose_dic_5shot = {'9-1-3': [2, 4, 5, 6, 7], '9-1-4': [1, 5, 6, 7], '9-1-5': [5, 6, 7], '9-1-6': [1, 5, 6], '9-2-2': [5, 4, 3], '9-2-3': [5, 10], '9-2-4': [5, 6], '9-2-5': [5, 6, 11], '9-2-7': [6, 10, 11], '9-2-9': [9], '9-2-11': [6], '10-1-2': [8, 6], '10-1-3': [1, 3, 6, 8, 10], '10-1-6': [9], '10-1-7': [6], '10-1-9': [7], '10-1-11': [8], '10-1-12': [11, 12], '10-1-14': [1, 8, 10], '10-1-15': [1, 5], '10-1-17': [8], '10-1-20': [8], '10-2-3': [3, 4], '10-2-5': [2], '10-2-6': [4], '10-2-7': [2, 8], '10-2-10': [2, 4], '10-2-13': [4], '10-3-5': [3, 5, 7, 9, 10, 15, 16, 17], '10-3-6': [3, 5, 7, 14, 15, 16, 17], '10-3-7': [11, 12, 16], '10-3-9': [1, 3, 15, 17], '11-1-3': [3], '11-1-4': [8, 14], '11-1-5': [8], '11-1-6': [7], '11-1-7': [10], '11-1-8': [5, 6], '11-1-9': [3], '11-2-2': [6, 7], '11-2-3': [3], '11-2-7': [1, 2, 3, 4, 5, 7, 8, 9, 10], '11-2-8': [1], '11-2-11': [1, 4], '12-1-2': [1, 2, 4], '12-1-4': [4, 6], '12-1-5': [1, 2, 3, 4, 5, 6], '12-1-6': [5, 6], '12-1-9': [5], '12-1-10': [1, 6], '12-2-2': [6, 8, 9, 10], '12-2-3': [9], '12-2-5': [9, 7], '12-2-6': [7], '12-2-8': [4, 9, 8, 2], '12-2-9': [1, 2, 8, 9, 10], '12-2-10': [1, 2, 5, 7, 8, 9, 10], '12-2-11': [3, 8], '13-1-1': [2, 5, 6], '13-1-3': [1, 7], '13-1-5': [9, 4], '13-1-6': [9], '14-1-3': [1, 6, 9], '14-1-4': [1, 3], '14-1-5': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], '14-1-7': [6], '14-1-8': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], '14-1-9': [1, 3, 4, 6, 9, 10], '14-1-11': [2, 9], '14-1-12': [2, 9], '14-1-13': [1, 9], '14-1-14': [3, 9], '14-1-15': [1, 2, 3, 8, 9], '14-1-17': [9, 6], '14-1-18': [2, 9, 3, 6, 7], '14-1-19': [6], '14-2-2': [3, 5, 6, 7, 8, 9], '14-2-3': [3, 5], '14-2-4': [1, 3, 6, 9, 11], '14-2-5': [3, 5], '14-2-6': [10], '14-2-7': [3, 5, 6, 7, 9], '14-2-8': [6], '14-2-9': [2, 6], '14-2-10': [5], '14-2-11': [5], '14-2-12': [5], '15-1-2': [7], '15-1-3': [2, 3, 6], '15-1-5': [1, 2, 3], '15-1-6': [1, 2, 3, 4, 5, 6, 7], '15-1-12': [2, 6, 7], '15-1-13': [6], '15-1-14': [6], '15-1-15': [7], '15-2-1': [1, 2, 3], '15-2-2': [7, 8], '15-2-4': [8], '15-2-6': [8], '15-2-9': [8], '15-2-10': [7], '15-2-11': [8], '16-1-3': [4], '16-1-4': [1, 3], '16-1-5': [2, 6], '16-1-6': [1, 2, 3, 6], '16-1-7': [2, 3], '16-1-8': [1, 2, 3, 4, 5, 6, 7, 11], '16-1-9': [2, 6], '16-1-10': [1], '16-1-12': [6, 10], '16-1-13': [6], '16-1-14': [11, 2, 6], '17-1-4': [2, 8], '17-1-5': [9], '17-1-7': [1, 2], '17-1-9': [2, 5, 6, 7, 9], '17-1-10': [8], '17-1-11': [8], '17-2-2': [8], '17-2-4': [4], '17-2-5': [4], '17-2-7': [4], '17-2-9': [1, 2, 4, 6], '17-2-11': [2, 6], '17-2-12': [2, 3, 6], '17-2-13': [4, 8], '17-2-15': [6, 8], '17-3-3': [2], '17-3-4': [2], '17-3-6': [2, 9], '18-1-3': [2], '18-1-5': [5], '18-1-6': [5, 7], '18-1-8': [5, 6], '18-1-9': [5, 8], '18-1-10': [5, 8], '18-1-11': [5, 7, 8], '18-1-12': [1, 5, 8], '18-1-14': [1, 5, 9, 10], '18-1-15': [2, 5, 9, 10], '18-2-3': [1, 4], '18-2-6': [1, 3, 4, 8, 11], '18-2-7': [1, 6, 7], '18-2-8': [1, 2, 3, 4], '18-2-12': [7], '19-1-2': [6], '19-1-3': [6], '19-1-5': [1, 2, 7], '19-1-6': [7], '19-1-7': [7], '19-1-11': [6], '19-1-12': [6, 1, 7], '19-1-14': [2, 3, 4, 7], '19-1-15': [6], '19-1-17': [2, 3, 7], '20-1-4': [3, 6, 7], '20-1-5': [3, 5], '20-1-6': [2, 5, 7, 9], '20-1-7': [10], '20-1-8': [3, 10], '20-1-9': [1, 2], '20-1-11': [2], '20-1-12': [3, 2, 6], '20-2-2': [8], '20-2-3': [8], '20-2-4': [8, 9], '20-2-5': [8, 9, 10], '20-2-6': [5], '20-2-7': [5, 10], '20-2-9': [11], '20-2-11': [8], '20-2-14': [8], '21-1-1': [4, 11], '21-1-2': [11], '21-1-3': [7]}
            LLM_choose_dic_1shot = {'9-1-3': [8, 9], '9-1-4': [5, 6, 7], '9-1-5': [5], '9-1-6': [5, 6, 7], '9-2-2': [5], '9-2-3': [5, 10], '9-2-4': [5], '9-2-5': [5, 10, 11], '9-2-7': [10], '9-2-9': [10], '9-2-11': [4, 5, 6], '10-1-2': [8, 10], '10-1-3': [6], '10-1-6': [7, 11], '10-1-7': [6, 9], '10-1-9': [7, 8, 10, 11, 12], '10-1-11': [10, 11], '10-1-12': [1, 2, 6, 7, 8, 9, 10], '10-1-14': [1, 7, 8, 9, 10], '10-1-15': [7, 8, 9, 10], '10-1-17': [7], '10-1-20': [7, 9, 10, 12], '10-2-3': [2, 3], '10-2-5': [4], '10-2-6': [1], '10-2-7': [1], '10-2-10': [2, 8], '10-2-13': [4], '10-3-5': [2, 3, 5, 10, 14, 15, 17], '10-3-6': [3, 4, 5, 9, 14, 15, 16, 17], '10-3-7': [2, 5, 11, 16], '10-3-9': [6, 7], '11-1-3': [3], '11-1-4': [8], '11-1-5': [8], '11-1-6': [11], '11-1-7': [10], '11-1-8': [5, 6], '11-1-9': [3], '11-2-2': [6, 10], '11-2-3': [1, 3], '11-2-7': [1, 4, 5, 8, 9, 10], '11-2-8': [3, 9], '11-2-11': [5, 8, 9], '12-1-2': [5, 6], '12-1-4': [4, 6], '12-1-5': [4, 5, 6], '12-1-6': [5], '12-1-9': [5, 6], '12-1-10': [5], '12-2-2': [9, 10], '12-2-3': [9], '12-2-5': [9, 10], '12-2-6': [7], '12-2-8': [7, 9], '12-2-9': [7, 9], '12-2-10': [1, 2, 7, 8, 9, 10], '12-2-11': [7, 5], '13-1-1': [2, 5, 6], '13-1-3': [9], '13-1-5': [9], '13-1-6': [4, 5, 9], '14-1-3': [1, 6, 9, 10], '14-1-4': [8], '14-1-5': [6], '14-1-7': [6], '14-1-8': [1, 2, 6], '14-1-9': [], '14-1-11': [2, 9], '14-1-12': [2, 9], '14-1-13': [9], '14-1-14': [9], '14-1-15': [1, 2, 6, 9, 10], '14-1-17': [9], '14-1-18': [9, 10], '14-1-19': [6, 9], '14-2-2': [3, 5, 6, 9], '14-2-3': [3, 5], '14-2-4': [3, 6, 7, 9], '14-2-5': [2, 5], '14-2-6': [10], '14-2-7': [2, 3, 5, 6], '14-2-8': [6, 10], '14-2-9': [8, 11], '14-2-10': [5], '14-2-11': [4, 9, 10], '14-2-12': [10, 11], '15-1-2': [7], '15-1-3': [7], '15-1-5': [7], '15-1-6': [1, 2, 3, 7], '15-1-12': [1, 2, 3, 6, 7], '15-1-13': [6], '15-1-14': [6], '15-1-15': [6], '15-2-1': [1, 2, 3, 4], '15-2-2': [7], '15-2-4': [8], '15-2-6': [8], '15-2-9': [7, 8], '15-2-10': [7], '15-2-11': [7], '16-1-3': [1, 2, 3, 6], '16-1-4': [1, 3], '16-1-5': [1, 2, 6], '16-1-6': [1], '16-1-7': [1, 2, 4, 7], '16-1-8': [5, 8, 10], '16-1-9': [2, 6], '16-1-10': [1, 2, 3, 6, 7, 8, 9, 10, 11], '16-1-12': [6, 10], '16-1-13': [2, 6], '16-1-14': [2, 6], '17-1-4': [1, 2, 8], '17-1-5': [9], '17-1-7': [1, 2], '17-1-9': [1], '17-1-10': [8], '17-1-11': [3, 4, 5, 6, 9], '17-2-2': [8], '17-2-4': [2], '17-2-5': [4], '17-2-7': [1, 8], '17-2-9': [7], '17-2-11': [7, 8, 9], '17-2-12': [3, 7, 8], '17-2-13': [1, 2, 5, 8], '17-2-15': [7, 8, 9], '17-3-3': [2], '17-3-4': [2], '17-3-6': [9], '18-1-3': [7], '18-1-5': [5], '18-1-6': [1, 5, 7], '18-1-8': [5, 7], '18-1-9': [10], '18-1-10': [5], '18-1-11': [4, 5, 8], '18-1-12': [4, 5, 8], '18-1-14': [5, 6, 7, 8, 9, 10], '18-1-15': [2, 5, 9, 10], '18-2-3': [1, 4], '18-2-6': [1, 2, 4, 5, 7, 9, 10], '18-2-7': [1, 4, 5], '18-2-8': [1, 4], '18-2-12': [6, 7], '19-1-2': [2, 6], '19-1-3': [6], '19-1-5': [7], '19-1-6': [7], '19-1-7': [1, 2, 7], '19-1-11': [6, 7, 8], '19-1-12': [7], '19-1-14': [1, 2, 3, 4, 6, 8], '19-1-15': [6], '19-1-17': [1, 2, 4, 6], '20-1-4': [3], '20-1-5': [3], '20-1-6': [3, 4, 6, 7, 10, 11], '20-1-7': [3], '20-1-8': [3, 6, 7, 9], '20-1-9': [1], '20-1-11': [2, 3], '20-1-12': [3, 4, 8, 9, 10, 11], '20-2-2': [8], '20-2-3': [8], '20-2-4': [8, 9], '20-2-5': [8, 9], '20-2-6': [5, 8], '20-2-7': [5, 8], '20-2-9': [11, 12], '20-2-11': [8], '20-2-14': [8], '21-1-1': [4], '21-1-2': [4], '21-1-3': [8]}
            LLM_choose_dic_3shot = {'9-1-3': [4], '9-1-4': [1, 5, 6, 7], '9-1-5': [5, 6, 7], '9-1-6': [1, 2, 5, 6, 7], '9-2-2': [4, 5, 6], '9-2-3': [4, 5, 10], '9-2-4': [5, 6], '9-2-5': [11], '9-2-7': [5, 6], '9-2-9': [8, 10], '9-2-11': [6, 7], '10-1-2': [6, 8], '10-1-3': [3, 6, 10], '10-1-6': [10], '10-1-7': [7, 8], '10-1-9': [7, 8, 9, 10, 11, 12], '10-1-11': [11], '10-1-12': [2, 10], '10-1-14': [1, 6, 8, 9, 10], '10-1-15': [1], '10-1-17': [9, 2, 3, 4, 7, 8, 10, 11, 12], '10-1-20': [12, 7, 6, 1, 2, 3, 8, 9, 10], '10-2-3': [1], '10-2-5': [1], '10-2-6': [1], '10-2-7': [1], '10-2-10': [2, 4], '10-2-13': [4], '10-3-5': [3, 5, 10, 15, 16, 17], '10-3-6': [3, 5, 7, 14, 15, 16, 17], '10-3-7': [5], '10-3-9': [1, 5], '11-1-3': [6], '11-1-4': [8], '11-1-5': [8], '11-1-6': [10], '11-1-7': [10, 1], '11-1-8': [6, 5], '11-1-9': [3], '11-2-2': [6, 7], '11-2-3': [1, 3], '11-2-7': [1, 5, 9, 10], '11-2-8': [1, 3], '11-2-11': [9, 10], '12-1-2': [1, 5, 6], '12-1-4': [5, 6], '12-1-5': [1, 2, 3, 5, 6], '12-1-6': [5, 3, 2], '12-1-9': [5], '12-1-10': [1, 2, 3, 4, 5, 6], '12-2-2': [9, 10], '12-2-3': [9], '12-2-5': [7, 9], '12-2-6': [7], '12-2-8': [7, 9, 10], '12-2-9': [1, 7], '12-2-10': [1, 7, 8], '12-2-11': [7, 6, 3], '13-1-1': [1, 2, 3, 5, 6, 7, 9], '13-1-3': [1], '13-1-5': [9], '13-1-6': [9], '14-1-3': [5], '14-1-4': [1, 2, 5], '14-1-5': [3, 6], '14-1-7': [6], '14-1-8': [1, 2, 3, 5, 6, 7, 8, 9, 10], '14-1-9': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], '14-1-11': [2, 9], '14-1-12': [2, 9], '14-1-13': [1, 2, 3, 4, 9, 10], '14-1-14': [9], '14-1-15': [1, 9], '14-1-17': [9], '14-1-18': [2, 9], '14-1-19': [6, 7, 10], '14-2-2': [5, 6, 9], '14-2-3': [5, 3], '14-2-4': [3, 5, 9], '14-2-5': [1, 3, 5, 9], '14-2-6': [10], '14-2-7': [4, 5, 6], '14-2-8': [1, 6], '14-2-9': [6], '14-2-10': [5], '14-2-11': [5, 10], '14-2-12': [6], '15-1-2': [7], '15-1-3': [7], '15-1-5': [1, 2, 3], '15-1-6': [1, 4, 5, 7], '15-1-12': [2, 3, 6], '15-1-13': [6], '15-1-14': [6, 2], '15-1-15': [], '15-2-1': [1, 2, 3, 4, 8], '15-2-2': [6, 8, 7], '15-2-4': [8], '15-2-6': [5], '15-2-9': [7, 8, 3], '15-2-10': [8], '15-2-11': [8], '16-1-3': [2, 6], '16-1-4': [1, 3], '16-1-5': [2, 3, 6], '16-1-6': [1, 2], '16-1-7': [1, 2, 3], '16-1-8': [1, 2], '16-1-9': [2, 6], '16-1-10': [1, 5, 6], '16-1-12': [6, 9], '16-1-13': [6], '16-1-14': [10], '17-1-4': [3, 4, 6, 8], '17-1-5': [8, 9], '17-1-7': [1, 2], '17-1-9': [1, 2, 5], '17-1-10': [8], '17-1-11': [8], '17-2-2': [8], '17-2-4': [2], '17-2-5': [4], '17-2-7': [6, 8], '17-2-9': [4], '17-2-11': [4, 8], '17-2-12': [2, 6, 8], '17-2-13': [4], '17-2-15': [6, 8], '17-3-3': [2], '17-3-4': [2], '17-3-6': [2, 5, 9], '18-1-3': [5], '18-1-5': [5, 7], '18-1-6': [5], '18-1-8': [5], '18-1-9': [5, 8], '18-1-10': [8], '18-1-11': [1, 2, 5, 8], '18-1-12': [5, 2, 8], '18-1-14': [5, 7], '18-1-15': [5, 8, 9], '18-2-3': [1, 4], '18-2-6': [1, 2, 4], '18-2-7': [1, 4], '18-2-8': [1, 2, 3, 4, 5, 7], '18-2-12': [7], '19-1-2': [2, 3, 4, 6], '19-1-3': [6], '19-1-5': [1, 2, 7], '19-1-6': [7], '19-1-7': [2, 7], '19-1-11': [6, 7], '19-1-12': [6, 3, 4, 8], '19-1-14': [2, 3, 8], '19-1-15': [], '19-1-17': [1, 2, 3, 4, 6], '20-1-4': [3], '20-1-5': [3], '20-1-6': [1, 3, 10], '20-1-7': [7], '20-1-8': [1, 3, 5, 6, 7, 10], '20-1-9': [1], '20-1-11': [2], '20-1-12': [3], '20-2-2': [8], '20-2-3': [8], '20-2-4': [8, 9], '20-2-5': [4, 8, 9], '20-2-6': [5, 8], '20-2-7': [5], '20-2-9': [5, 6, 11], '20-2-11': [8], '20-2-14': [8], '21-1-1': [4, 9], '21-1-2': [4], '21-1-3': [8]}

            if args.annotation == 'human':
                provenance = human_ptkb[sample_id]
            if args.annotation == 'machine':
                provenance = machine_ptkb[sample_id]
            if args.annotation == 'LLM':
                provenance = LLM_choose_dic[sample_id]
            if args.annotation == 'LLM_1shot':
                provenance = LLM_choose_dic_1shot[sample_id]
            if args.annotation == 'LLM_3shot':
                provenance = LLM_choose_dic_3shot[sample_id]
            if args.annotation == 'LLM_5shot':
                provenance = LLM_choose_dic_5shot[sample_id]


            if conv == []:
                conv = cur_utt
            ptkb_lable = ''
            for i in provenance:
                ptkb_lable = ptkb_lable + ptkb[str(i)] + '\n'
            if ptkb_lable == '':
                ptkb_lable = 'None'



            YourTask = ''
            for q,a in zip(conv,history_response):
                YourTask += f'Question: {q}\nResponse: {a}\n\n'
            YourTask += 'Current Question: ' + cur_utt 
        

            if args.prompt_type == 1:
                prompt = f"""### Instruction: I will give you a conversation between a user and a system. Also will give you some background information about the user. You should answer the last utterance of the user based on user background information. Please remember that your answer to the last question the user shouldn't be more than 200 words.
### Background information about the user:
{ptkb_lable}
### Conversation:
{YourTask} 
### Response:
### Can you generate the unique queries that can be used for retrieving your previous answer to the user? (Please write queries in one line and don't generate more than 5 queries)
### Queries:
(Now, you should give me the Response and the Queries. The output format should always be: Response: $Response Queries: $Queries. Go ahead!)
""" 

            if args.prompt_type == 2:
                prompt = f"""For an information-seeking dialog, please help reformulate the question into a rewrite that can fully express the user's information needs without the need for context, but also generate an informative response to answer the question. You can generate a rewrite and response based on the user's personal information(if any).
#YourTask:
User's personal information:
{ptkb_lable}
{YourTask}
(Now, you should give me the rewrite and an informative response of the **Current Question** based on the **Context**.Please provide a complete informative response, but keep it under 200 words. The output format should always be: Rewrite: $Rewrite\nResponse: $Response. Go ahead!)
""" 

            print(prompt)
            r = openai.ChatCompletion.create(
                    model = model_engine,
                    messages = [{"role":"system","content":"you are a query rewriter and knowledge selector"},{"role":"user","content":prompt}])

            cnv = r.choices[0].message["content"]
            print(sample_id)
            print('prompt: ',prompt)
            print('——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————')
            print(cnv)

            match_rewrite = re.search(r'Queries:\s*(.*)', cnv,re.DOTALL)
            match_response = re.search(r'Response:(.*?)Queries:', cnv,re.DOTALL)
            rewrite = match_rewrite.group(1)
            response = match_response.group(1)

            data['rewrite_utt_text'] = rewrite
            data['response_utt_text'] = response



        


            with open(args.output_path, 'a+') as outfile:
                    json.dump(data, outfile)
                    outfile.write('\n')
            time.sleep(1) 

def get_args():
    parser = argparse.ArgumentParser()

    parser.add_argument("--input_path", type=str, default="data/2023_test_topics_new_filted.jsonl")
    parser.add_argument('--output_path', type=str, default="2023_test_output.jsonl")
    parser.add_argument('--annotation', type=str, default="human")
    parser.add_argument('--prompt_type', type=int, default=1)
    args = parser.parse_args()
    return args


        

if __name__ == '__main__':
    main()

